// Generated by Dagger (https://dagger.dev).
package com.example.samplearch.home.data.repository;

import com.example.samplearch.home.data.remote.PostsRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PostsRepository_Factory implements Factory<PostsRepository> {
  private final Provider<PostsRemoteDataSource> postsRemoteDataSourceProvider;

  public PostsRepository_Factory(Provider<PostsRemoteDataSource> postsRemoteDataSourceProvider) {
    this.postsRemoteDataSourceProvider = postsRemoteDataSourceProvider;
  }

  @Override
  public PostsRepository get() {
    return newInstance(postsRemoteDataSourceProvider.get());
  }

  public static PostsRepository_Factory create(
      Provider<PostsRemoteDataSource> postsRemoteDataSourceProvider) {
    return new PostsRepository_Factory(postsRemoteDataSourceProvider);
  }

  public static PostsRepository newInstance(PostsRemoteDataSource postsRemoteDataSource) {
    return new PostsRepository(postsRemoteDataSource);
  }
}
